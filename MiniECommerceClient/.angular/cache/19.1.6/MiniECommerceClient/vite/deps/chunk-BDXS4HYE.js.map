{
  "version": 3,
  "sources": ["../../../../../../node_modules/tr-currency/fesm2022/tr-currency.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Pipe } from '@angular/core';\nclass TrCurrencyPipe {\n  transform(value, symbol = \"\", isCurrencyFront = true, fraction = 2) {\n    if (fraction < 0) fraction = 0;\n    if (value === undefined || value === null || isNaN(Number(value))) {\n      if (fraction === 0) {\n        return isCurrencyFront ? `${symbol}0` : `0 ${symbol}`;\n      } else {\n        return isCurrencyFront ? `${symbol}0,${'0'.repeat(fraction)}` : `0,${'0'.repeat(fraction)} ${symbol}`;\n      }\n    }\n    value = Number(value);\n    let isValueNegative = false;\n    if (value < 0) {\n      isValueNegative = true;\n      value = Math.abs(value);\n    }\n    value = parseFloat(value.toFixed(fraction));\n    let money = value.toString().split(\".\");\n    let newMoney = \"\";\n    let lira = money[0];\n    let penny = money.length > 1 ? money[1] : \"\";\n    if (penny.length < fraction) {\n      penny += \"0\".repeat(fraction - penny.length);\n    }\n    let count = 0;\n    for (let i = lira.length; i > 0; i--) {\n      if (count === 3 && count < lira.length) {\n        newMoney = lira[i - 1] + \".\" + newMoney;\n        count = 1;\n      } else {\n        newMoney = lira[i - 1] + newMoney;\n        count++;\n      }\n    }\n    if (!isCurrencyFront) {\n      newMoney = fraction === 0 ? `${newMoney} ${symbol}` : `${newMoney},${penny} ${symbol}`;\n    } else {\n      newMoney = fraction === 0 ? `${symbol}${newMoney}` : `${symbol}${newMoney},${penny}`;\n    }\n    if (isValueNegative) {\n      newMoney = `-${newMoney}`;\n    }\n    return newMoney;\n  }\n  static {\n    this.ɵfac = function TrCurrencyPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TrCurrencyPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"trCurrency\",\n      type: TrCurrencyPipe,\n      pure: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrCurrencyPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'trCurrency',\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of my-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TrCurrencyPipe };\n"],
  "mappings": ";;;;;;;AAEA,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,UAAU,OAAO,SAAS,IAAI,kBAAkB,MAAM,WAAW,GAAG;AAClE,QAAI,WAAW,EAAG,YAAW;AAC7B,QAAI,UAAU,UAAa,UAAU,QAAQ,MAAM,OAAO,KAAK,CAAC,GAAG;AACjE,UAAI,aAAa,GAAG;AAClB,eAAO,kBAAkB,GAAG,MAAM,MAAM,KAAK,MAAM;AAAA,MACrD,OAAO;AACL,eAAO,kBAAkB,GAAG,MAAM,KAAK,IAAI,OAAO,QAAQ,CAAC,KAAK,KAAK,IAAI,OAAO,QAAQ,CAAC,IAAI,MAAM;AAAA,MACrG;AAAA,IACF;AACA,YAAQ,OAAO,KAAK;AACpB,QAAI,kBAAkB;AACtB,QAAI,QAAQ,GAAG;AACb,wBAAkB;AAClB,cAAQ,KAAK,IAAI,KAAK;AAAA,IACxB;AACA,YAAQ,WAAW,MAAM,QAAQ,QAAQ,CAAC;AAC1C,QAAI,QAAQ,MAAM,SAAS,EAAE,MAAM,GAAG;AACtC,QAAI,WAAW;AACf,QAAI,OAAO,MAAM,CAAC;AAClB,QAAI,QAAQ,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,QAAI,MAAM,SAAS,UAAU;AAC3B,eAAS,IAAI,OAAO,WAAW,MAAM,MAAM;AAAA,IAC7C;AACA,QAAI,QAAQ;AACZ,aAAS,IAAI,KAAK,QAAQ,IAAI,GAAG,KAAK;AACpC,UAAI,UAAU,KAAK,QAAQ,KAAK,QAAQ;AACtC,mBAAW,KAAK,IAAI,CAAC,IAAI,MAAM;AAC/B,gBAAQ;AAAA,MACV,OAAO;AACL,mBAAW,KAAK,IAAI,CAAC,IAAI;AACzB;AAAA,MACF;AAAA,IACF;AACA,QAAI,CAAC,iBAAiB;AACpB,iBAAW,aAAa,IAAI,GAAG,QAAQ,IAAI,MAAM,KAAK,GAAG,QAAQ,IAAI,KAAK,IAAI,MAAM;AAAA,IACtF,OAAO;AACL,iBAAW,aAAa,IAAI,GAAG,MAAM,GAAG,QAAQ,KAAK,GAAG,MAAM,GAAG,QAAQ,IAAI,KAAK;AAAA,IACpF;AACA,QAAI,iBAAiB;AACnB,iBAAW,IAAI,QAAQ;AAAA,IACzB;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,uBAAuB,mBAAmB;AAC7D,aAAO,KAAK,qBAAqB,iBAAgB;AAAA,IACnD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,aAAa;AAAA,MAC1C,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": []
}
